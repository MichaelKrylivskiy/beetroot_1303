# Описати функцію з назвою min_sort, яка отримує єдиний аргумент 'sequence' - список, який потрібно відсортувати.

def min_sort(sequence):
    # Ініціалізувати порожній список для зберігання відсортованих елементів.
    result = list()

    # Перебирати в діапазоні чисел від 0 до довжини послідовності.
    for counter in range(len(sequence)):
        # Знайти мінімальний елемент у поточній послідовності.
        min_element = min(sequence)

        # Знайти індекс мінімального елементу в послідовності.
        index_of_min = sequence.index(min_element)

        # Видалити мінімальний елемент з послідовності.
        sequence.pop(index_of_min)

        # Додати мінімальний елемент до списку результатів.
        result.append(min_element)

        # Як варіант, останні три рядки можна об'єднати в один рядок:
        # result.append(sequence.pop(sequence.index(min(sequence))))

    # Повернути відсортований результат.
    return result


# Якщо цей скрипт виконується безпосередньо (а не імпортується як модуль), виконайте операцію сортування.
if __name__ == "__main__":
    # Визначити список to_sort, що містить невідсортовані цілі числа.
    to_sort = [15, 9, 8, 1, 4, 11, 7, 12, 13, 6, 5, 3, 16, 2, 10, 14]

    # Викликати функцію min_sort зі списком to_sort як аргумент і вивести результат.
    print(min_sort(to_sort))
